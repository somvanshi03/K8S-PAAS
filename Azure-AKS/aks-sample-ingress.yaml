apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/backend-path-prefix: "/"
    appgw.ingress.kubernetes.io/backend-hostname: "my-backend.com"
    appgw.ingress.kubernetes.io/health-probe-hostname: "my-backend.com"
    appgw.ingress.kubernetes.io/health-probe-port: "80"
    appgw.ingress.kubernetes.io/health-probe-path: "/health"
    appgw.ingress.kubernetes.io/health-probe-status-codes: "200-399"
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    appgw.ingress.kubernetes.io/use-private-ip: "false"
    appgw.ingress.kubernetes.io/request-timeout: "30"
    appgw.ingress.kubernetes.io/connection-draining: "true"
    appgw.ingress.kubernetes.io/connection-draining-timeout: "30"
    appgw.ingress.kubernetes.io/cookie-based-affinity: "true"
    appgw.ingress.kubernetes.io/session-affinity-cookie-name: "MyCookieName"
    appgw.ingress.kubernetes.io/appgw-ssl-certificate: "my-ssl-cert"
    appgw.ingress.kubernetes.io/appgw-trusted-root-certificate: "my-root-cert"
    appgw.ingress.kubernetes.io/override-frontend-port: "443"
    appgw.ingress.kubernetes.io/override-backend-path: "/"
    appgw.ingress.kubernetes.io/rewrite-target: "/new-path"
spec:
  rules:
  - host: "example.com"
    http:
      paths:
      - path: /path
        pathType: Prefix
        backend:
          service:
            name: my-service
            port:
              number: 80